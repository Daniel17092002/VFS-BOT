require('dotenv').config();
const puppeteer = require('puppeteer');
const dados = require('./dados.json');
const axios = require('axios');
const TelegramBot = require('node-telegram-bot-api'); // Biblioteca para comando /start

const TELEGRAM_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_ID = process.env.TELEGRAM_USER_ID;

// Resposta automática ao comando /start no Telegram
const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });
bot.onText(/\/start/, (msg) => {
  bot.sendMessage(msg.chat.id, '🔍 A vaga ainda não foi encontrada. Por programador DANIEL MBIA');
});

async function sendTelegram(msg) {
  if (!TELEGRAM_TOKEN || !TELEGRAM_ID) return;
  await axios.post(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, {
    chat_id: TELEGRAM_ID,
    text: msg
  });
}

(async () => {
  // Controle de horário: só roda de sexta 5h até domingo 00h
  const agora = new Date();
  const dia = agora.getDay(); // 0=Domingo, 1=Segunda, ..., 5=Sexta, 6=Sábado
  const hora = agora.getHours();

  const dentroDoHorarioPermitido = (
    (dia === 5 && hora >= 5) || // Sexta após 5h
    (dia === 6) ||              // Sábado
    (dia === 0 && hora === 0)   // Domingo meia-noite (hora 0)
  );

  if (!dentroDoHorarioPermitido) {
    await sendTelegram('⏳ Fora do horário: o bot só roda de sexta 5h até domingo 00h.');
    return; // Para a execução do bot fora do horário permitido
  }

  const browser = await puppeteer.launch({
    headless: true,
    args: ['--no-sandbox','--disable-setuid-sandbox']
  });
  const page = await browser.newPage();

  await page.goto('https://visa.vfsglobal.com/ago/pt/bra/login', { waitUntil: 'networkidle2' });
  await page.type('#email', process.env.EMAIL);
  await page.type('#password', process.env.PASSWORD);
  await Promise.all([
    page.click('button[type="submit"]'),
    page.waitForNavigation({ waitUntil: 'networkidle2' })
  ]);

  await sendTelegram('✅ Bot iniciando: login feito.');

  while (true) {
    await page.reload({ waitUntil: 'networkidle2' });
    const pageText = await page.evaluate(() => document.body.innerText);
    if (!pageText.includes('No appointment slots are currently available')) {
      await sendTelegram('🔔 Vaga encontrada! Tentando reservar...');
      try {
        await page.type('input[name="applicantName"]', dados.nome);
        await page.type('input[name="passportNumber"]', dados.passaporte);
        await page.type('input[name="dateOfBirth"]', dados.dataNascimento);
        await page.select('select[name="gender"]', dados.genero);
        await page.type('input[name="nationality"]', dados.nacionalidade);
        await page.type('input[name="phone"]', dados.telefone);
        await Promise.all([
          page.click('button.next'),
          page.waitForNavigation({ waitUntil: 'networkidle2' })
        ]);
        await sendTelegram('✅ Vaga reservada com sucesso!');
      } catch (e) {
        await sendTelegram('❌ Erro no preenchimento: ' + e.message);
      }
      break;
    }
    await new Promise(r => setTimeout(r, 5000));
  }

  await browser.close();
})();
